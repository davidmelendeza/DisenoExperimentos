library(tidyverse)
redes = (read.csv(file.choose(), header=TRUE, encoding = "UTF-8"))
attach(redes)
head(redes, 10)

top_est <- redes %>% filter(topologia == "estrella") %>% pull(tiempo)
top_malla <- redes %>% filter(topologia == "malla") %>% pull(tiempo)
mean(top_malla) - mean(top_est)

plot(redes$tiempo, axes = TRUE , ylab = "Tiempo observado", xlab = "Obser
vaciones")
abline(h = mean(redes$tiempo), col = "blue")

ggplot(redes,aes(x = tiempo)) +
  geom_histogram(aes(y = ..density.., colour = topologia)) +
  facet_grid(.~ topologia) +
  theme_bw() + theme(legend.position = "none") +
  theme (text = element_text(size=16))

par(mfrow = c(1, 2))
qqnorm(top_malla, xlab = "", ylab = "",
       main = "Topología malla", col = "firebrick")
qqline(top_malla)
qqnorm(top_est, xlab = "", ylab = "",
       main = "Topología estrella", col = "springgreen4")
qqline(top_est)

shapiro.test(top_est)

ggplot(data = redes) +
  geom_boxplot(aes(x = topologia, y = tiempo, colour = topologia)) +
  theme_bw() + theme(legend.position = "none") +
  theme (text = element_text(size=16))

library(car)
fligner.test(tiempo ~ topologia, data = redes)

leveneTest(tiempo ~ topologia, data = redes, center = "median")

t.test(
  x = top_est,
  y = top_malla,
  alternative = "two.sided",
  mu = 0,
  var.equal = TRUE,
  conf.level = 0.95
)

wilcox.test(
  x = top_est,
  y = top_malla,
  alternative = "two.sided",
  mu = 0,
  paired = FALSE,
  conf.int = 0.95)

install.packages("effsize")
library(effsize)
cohen.d(formula = tiempo ~ topologia, data = redes, paired = FALSE)

sd_grupo1 <- sd(top_est)
sd_grupo2 <- sd(top_malla)
#
# Se puede usar cualquiera de las dos dado que son similares
# o un promedio entre ambas
sd_comun <- mean(c(sd_grupo1, sd_grupo2))
sd_comun

delta_observado <- mean(top_malla) - mean(top_est)
delta_observado

length(top_est)
length(top_malla)

power.t.test(n = 110, delta = delta_observado, sd = sd_comun, sig.level = 0.05, type = "two.sample")

power.t.test(power = 0.8, delta = delta_observado, sd = sd_comun, sig.level = 0.05, type = "two.sample")


